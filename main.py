
def hex_to_little_endian(hex_value):
    if len(hex_value) % 2 != 0:
        hex_value += '0'
    bytes_array = []
    while len(hex_value) != 0:
        if hex_value[:2] != '0x':
            bytes_array.append(hex_value[:2])
        hex_value = hex_value[2:]
    bytes_array = list(reversed(bytes_array))
    hex_value = '0x'
    for b in bytes_array:
        hex_value += b
    return int(hex_value, 16)


def hex_to_big_endian(hex_value):
    if len(hex_value) % 2 != 0:
        hex_value = '0' + hex_value
    bytes_array = []
    while len(hex_value) != 0:
        if hex_value[:2] != '0x':
            bytes_array.append(hex_value[:2])
        hex_value = hex_value[2:]
    hex_value = '0x'
    for b in bytes_array:
        hex_value += b
    return int(hex_value, 16)


def little_endian_to_hex(value, bytes_number):
    hex_value = hex(value)
    if len(hex_value) % 2 != 0:
        hex_value += '0'
    bytes_array = []
    while len(hex_value) != 0:
        if hex_value[:2] != '0x':
            bytes_array.append(hex_value[:2])
        hex_value = hex_value[2:]
    bytes_array = list(reversed(bytes_array))
    hex_value = '0x'
    for b in bytes_array:
        hex_value += b
    while len(hex_value) != bytes_number * 2 + 2:
        hex_value += '0'
    return hex_value


def big_endian_to_hex(value):
    hex_value = hex(value)
    if len(hex_value) % 2 != 0:
        hex_value += '0'
    bytes_array = []
    while len(hex_value) != 0:
        if hex_value[:2] != '0x':
            bytes_array.append(hex_value[:2])
        hex_value = hex_value[2:]
    hex_value = '0x'
    for b in bytes_array:
        hex_value += b
    return hex_value


hex_values = ['0xff00000000000000000000000000000000000000000000000000000000000000',
              '0xaaaa000000000000000000000000000000000000000000000000000000000000',
              '0xFFFFFFFF',
              '0xF0000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '0000000000000000000000000000000000000000000000000000000000000000000'
              '000000000000000000000']

number_of_bytes = [32, 32, 4, 512]

little_endian_values = [255, 43690, 4294967295, 240]

big_endian_values = [115339776388732929035197660848497720713218148788040405586178452820382218977280,
                     77193548260167611359494267807458109956502771454495792280332974934474558013440,
                     4294967295,
                     int('9791145763248304750235181662968353586687164834819222941102188905787067887233351'
                         '1579577513618906021094458447504478680891061335009829918150680928383236065494807'
                         '4334665509728123444088990750984735919776315636114949587227798911935355699067813'
                         '7665730499539032574144116909725668287956938611960448137291721231521937690052908'
                         '2667604932522402830336963181210573759327200247158752791536783595247412487598207'
                         '7070337970837392460768423348044782340688207323630599527945406427226264695390995'
                         '3204003140629848915934113327527038468596403463236872017629345242223638360940532'
                         '0426998608704347011770333687340663657323580868344483643245345981859929366776014'
                         '9123595668832133083221407128310342064668595954073131257995767262426534143159642'
                         '5391794850139754616894937338661063121358298071291626541882099227558290123045826'
                         '7167151967831360974864681474505772436346218949027818345729644901416307750694963'
                         '6570237334109910914728582640301294341605533983878368789071427913184794906223657'
                         '9201241532561473596255497436560587463351245023766637107666110467507396805470421'
                         '8350356854946859270388209520798116101222496582960576830029761593978836870335394'
                         '4514111011011184191740295491255291545096680705534063721012625490368756140460791'
                         '685877738232879406346334603566914069127957053440')]

i = 0
while i != 4:
    print()
    print(hex_to_little_endian(hex_values[i]))
    print(hex_to_big_endian(hex_values[i]))
    print(little_endian_to_hex(little_endian_values[i], number_of_bytes[i]))
    print(big_endian_to_hex(big_endian_values[i]))
    print()
    i += 1
